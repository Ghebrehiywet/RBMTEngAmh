@model RBMTEngAmh.Models.RBTM.WordFeed
@using RBMTEngAmh.Models.RBTM

@{
    ViewBag.Title = "Create";
}

<script type="text/javascript">

    $(document).ready(function () {
        $("select[name='WordPOSType']").change(function () {
            var selectedVal = $(this).val();
            if (selectedVal == 1) {
                $("#IrregularPluralNounDiv").show();

                $("#IrregularPastVerbDiv").hide();
                $("#IrregularPPVerbDiv").hide();
            }
            else if (selectedVal == 3) {
                $("#IrregularPastVerbDiv").show();
                $("#IrregularPPVerbDiv").show();

                $("#IrregularPluralNounDiv").hide();
            }
            else {
                $("#IrregularPastVerbDiv").hide();
                $("#IrregularPPVerbDiv").hide();

                $("#IrregularPluralNounDiv").hide();
            }
        });


        $("select[name='WordType']").change(function () {
            var selectedVal = $(this).val();
            var pos = $('#WordPOSType').val();
            if (selectedVal == 1) {
                if (pos == 1) {
                    $("#IrregularPluralNounDiv").hide();
                }
                else if (pos == 3) {
                    $("#IrregularPastVerbDiv").hide();
                    $("#IrregularPPVerbDiv").hide();
                }
            }
            else {
                if (pos == 1) {
                    $("#IrregularPluralNounDiv").show();
                } else if (pos == 3) {
                    $("#IrregularPastVerbDiv").show();
                    $("#IrregularPPVerbDiv").show();
                }
            }
        });

    });

</script>



<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>WordFeed</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.WordPOSType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.WordPOSType, htmlAttributes: new { @class = "form-control", @id = "WordPOSType" })

                @*@Html.DropDownListFor(model => model.WordPOSType,
                        new SelectList(Enum.GetValues(typeof(WordPOSType))),
                        "Select One",
                        new { @class = "form-control",@required="required" })
                    @Html.ValidationMessageFor(model => model.WordPOSType, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group" id="WordTypeDiv">
            @Html.LabelFor(model => model.WordType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.WordType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WordType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="GenderDiv">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="RootWordDiv">
            @Html.LabelFor(model => model.RootWord, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RootWord, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RootWord, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="IrregularPluralNounDiv">
            @Html.LabelFor(model => model.IrregularPluralNoun, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IrregularPluralNoun, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IrregularPluralNoun, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="IrregularPastVerbDiv">
            @Html.LabelFor(model => model.IrregularPastVerb, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IrregularPastVerb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IrregularPastVerb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="IrregularPPVerbDiv">
            @Html.LabelFor(model => model.IrregularPPVerb, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IrregularPPVerb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IrregularPPVerb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
